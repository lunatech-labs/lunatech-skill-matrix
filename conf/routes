GET     /                                   controllers.MainController.index
GET     /users                              controllers.UserController.getAllUsers
POST    /users/search                       controllers.UserController.searchUsers
GET     /users/:userId                      controllers.UserController.getUserById(userId: Int)
DELETE  /users/:userId                      controllers.UserController.removeUser(userId: Int)
GET     /users/:userId/skills               controllers.SkillMatrixController.getUserSkills(userId: Int)
GET     /users/skills/:email                controllers.SkillMatrixController.getUserSkillsByEmail(email: String)
GET     /users/me/skillmatrix               controllers.SkillMatrixController.getMySkills
POST    /users/me/skillmatrix               controllers.SkillMatrixController.addSkill
PUT     /users/me/skillmatrix/:skillId      controllers.SkillMatrixController.updateSkill(skillId: Int)
DELETE  /users/me/skillmatrix/:skillId      controllers.SkillMatrixController.deleteSkill(skillId: Int)
GET     /alltech                            controllers.TechController.getAllTech
PUT     /alltech/:techId                    controllers.TechController.updateTech(techId: Int)
DELETE  /alltech/:techId                    controllers.TechController.removeTech(techId: Int)
GET     /techs/:query                       controllers.TechController.search(query: String)
GET     /skillmatrix                        controllers.SkillMatrixController.getSkillMatrix
GET     /skillmatrix/:techId                controllers.SkillMatrixController.getSkillMatrixByTechId(techId: Int)
POST    /google/auth                        controllers.GoogleSignInController.authenticate()
GET     /user-audit/latest                  controllers.UserSchedulerAuditController.getPeopleApiProcessStatus()
GET     /report/lastupdate                  controllers.ReportController.getLastUpdateReport

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                       controllers.Assets.versioned(path="/public", file: Asset)